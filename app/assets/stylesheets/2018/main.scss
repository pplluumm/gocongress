@import "variables";
@import "../functions/str-split";
@import "../functions/decimal-round";
@import "../mixins/breakpoint";
@import "../modules/adaptive-nav";
@import "colonial-bullets";
@import "intlTelInput";
@import url("https://fonts.googleapis.com/css?family=Cormorant+Garamond");

@font-face {
  font-family: "boswell";
  src: url(font-path("boswell.woff2")) format("woff2"),
    url(font-path("boswell.woff")) format("woff");
  font-weight: normal;
  font-style: normal;
}

html,
body {
  margin: 0;
  padding: 0;
}
body {
  font: {
    family: "Cormorant Garamond", serif;
    size: 24px;
  }
  @include breakpoint(lt-sm) {
    font-size: 18px;
  }
}

.body-container {
}

.header-logo {
  // Prevent flickering during transitions
  backface-visibility: hidden;
  position: absolute;
  left: 50%;
  bottom: -50px;
  height: calc(10vh + 100px);
  @include breakpoint(lt-md) {
    bottom: -15px;
    height: 20vh;
  }
  transform: translateX(-50%);
  z-index: 2;
}

.hide {
  display: none;
}

.valid,
.error {
  margin: 0 0 1em;
  transition: all 0.2s;
  max-height: 30px;
}
.valid {
  color: rgb(72, 224, 0);
}

.error {
  color: red;
}

.error-border {
  border: 1px solid #ff7c7c;
}

#header.home {
  .header-logo {
    height: calc(50vh + 100px);
    @include breakpoint(lt-md) {
      bottom: -30px;
      height: auto;
      width: 80vw;
    }
  }
}

#header-container {
}

#header {
  background: {
    // attachment: fixed;
    color: #333;
    image: radial-gradient(circle at bottom, black 0, transparent 50%),
      url(asset-path("2018/photographs/williamsburg/IMG_6730.jpg"));
    size: cover;
    position: 50% 100%;
    repeat: no-repeat;
  }
  // border-bottom: 2px solid #000;
  color: #fff;
  height: 20vh;

  &.home {
    height: 75vh;
    background: {
      image: radial-gradient(circle at bottom, black 0, transparent 50%),
        url(asset-path("2018/photographs/williamsburg/header1.jpg"));
    }
  }
  // background: {
  // 	image: url(asset-path('2018/revolutionary-woman-woodcut-crop.png'));
  // 	size: 240px;
  // 	position: 0% 100%;
  // 	repeat: no-repeat;
  // }
  // border-bottom: 3px solid #333;
  // padding: 2em 5vw;

  @include breakpoint(lt-xs) {
    // padding: 1em 5vw;
  }

  position: relative;

  h1 {
    font: {
      size: 60px;
      weight: normal;
    }
    margin: 0;
    a {
      color: #fff;
      text-decoration: none;
    }
  }
}

#nav-header {
  background: #222;
  display: flex;
  align-items: center;
  padding: 5px 10px;
}

#usgc-title-container {
  flex: 1 1 auto;
  font: {
    size: 18px;
  }

  @include breakpoint(lt-md) {
    display: none;
  }

  > h1 {
    margin: 0;

    a {
      color: #eee;
    }
  }
}

#usgc-when-where-container {
  color: #eee;
  font: {
    family: boswell;
    size: 24px;
  }
  line-height: 1;

  @include breakpoint(lt-md) {
    font-size: 18px;
    padding: 0.75em 1em 0.25em;
    text-align: center;
    flex: 1 1 auto;
  }

  .icon {
    display: inline-block;
    fill: #eee;
    height: 15px;
    width: 15px;
    margin: 0;

    @include breakpoint(lt-xs) {
      height: 10px;
      width: 10px;
    }
  }
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font: {
    family: boswell;
    weight: normal;
  }
}

.content {
  padding: 5vw;
}

h2 {
  font: {
    size: 36px;
  }
  @include breakpoint(lt-sm) {
    font-size: 30px;
  }
  margin: 0;
}

a {
  color: hsl(0, 60%, 50%);
  &:visited {
    color: hsl(0, 20%, 50%);
  }
}

.past-years {
  padding: {
    top: 0;
  }
}

#footer {
  background: #333;
  color: #ccc;
  padding: 2vw 5vw;
}

input[type="submit"],
input[type="button"],
button,
.button {
  $color: #eee;
  background: hsl(0, 60%, 50%);
  border: 3px double #fff;
  color: $color;
  cursor: pointer;
  display: inline-block;
  font: {
    family: boswell;
    size: 18px;
  }
  padding: 10px 20px;
  position: relative;
  text-decoration: none;
  transition: all 0.2s;

  &:visited {
    color: $color;
  }

  &:hover {
    background: hsl(0, 80%, 50%);
  }

  &[disabled] {
    background: hsl(0, 0, 50%);
    opacity: 0.3;
    cursor: not-allowed;
  }
}

.button-large {
  font: {
    size: 36px;
  }
}

.content-bullet {
  display: block;
  margin: 2em auto;
  height: 50px;
  max-width: 80%;
}

.nav-container {
  position: sticky;
  top: 0;
  z-index: 1;

  a {
    text-decoration: none;
  }
}

.scroller-image {
  clear: both;
  margin: 0 -5vw;
  background: {
    attachment: fixed;
    size: cover;
    position: 50% 50%;
    repeat: no-repeat;
  }
  @include breakpoint(lt-sm) {
    background: {
      attachment: inherit;
    }
  }

  height: 25vh;
}

.directors-photo {
  background: {
    image: url(asset-path("2018/photographs/williamsburg/diego-and-nate.jpg"));
  }
}

.dorm-facade {
  background: {
    image: url(asset-path("2018/photographs/williamsburg/IMG_6787.jpg"));
  }
}

#below-gallery {
  color: white;
  background: {
    color: hsl(0, 60%, 50%);
  }
  float: right;
  margin: 0 0 1em 1em;
  padding: 1em;
  position: relative;
  @include breakpoint(lt-sm) {
    float: none;
    margin: 0 0 1em;
  }

  * {
    position: relative;
  }

  a {
    color: white;
  }

  @extend .fancy-border;
}

// Forms
fieldset {
  border: 5px double #333;
  margin: 1em 0;
  padding: 0;
}

.field {
  display: flex;
  padding: 10px;
  > * {
    flex: 1 1 auto;
    margin: 10px;
    align-self: center;
  }

  > input[type="submit"],
  input[type="checkbox"] {
    flex: 0 1 auto;
  }

  > :first-child {
    flex: 0 0 auto;
    text-align: right;
    width: 25%;

    * {
      flex: 1 1 auto;
      text-align: right;
    }
  }

  > :first-child:last-child {
    flex: 1 1 auto;
    text-align: left;
  }

  > :not(:first-child):not(:last-child) {
    flex: 0 1 auto;
    align-self: center;
  }

  > :last-child {
    text-align: left;
  }

  select {
    flex-grow: 0;
  }

  input,
  textarea {
    flex: 1 1 auto;
    padding: 0.5em;
    font: {
      size: 14px;
    }
  }

  .field_with_errors {
    display: flex;
    > {
      flex: 1 1 auto;
    }
  }
}

.pull-right {
  float: right;
}

.pull-left {
  float: left;
}

.flash.flash-notice {
  background: hsl(100, 50%, 50%);
  color: white;
  padding: 0.5em 1em;
  margin: 0 -1em 1em;
  position: relative;

  @extend .fancy-border;
}

.fancy-border {
  &:before {
    pointer-events: none;
    display: block;
    content: "";
    position: absolute;
    $inset: 5px;
    top: $inset;
    right: $inset;
    bottom: $inset;
    left: $inset;
    border: 1px solid white;
  }
}

table {
  &.status-table {
    border-collapse: collapse;
    cell-spacing: 10px;

    th,
    td {
      padding: 0.5em;
    }

    th {
      color: hsl(0, 0%, 20%);
      font-weight: normal;
      text-align: right;
    }

    tr {
      &.ready {
        $color: hsl(100, 80%, 50%);
        th {
          background: $color;
        }
        td {
          background: lighten($color, 20%);
        }
      }

      &.not-ready {
        $color: hsl(50, 100%, 50%);
        th {
          background: $color;
        }
        td {
          background: lighten($color, 10%);
        }
      }
    }
  }

  // TODO: Figure out what the classname "semantic" means, in this context :)
  &.semantic {
    border-collapse: collapse;

    thead {
      background: hsl(50, 100%, 50%);
      th {
        color: hsl(50, 100%, 25%);
      }
    }

    tbody {
      background: hsl(50, 100%, 90%);

      th {
        background: hsl(50, 100%, 50%);
        color: hsl(50, 100%, 20%);
        font: {
          size: 36px;
        }
      }
    }

    th,
    td {
      margin: 0;
      padding: 10px 20px;
      text-align: left;
    }

    td {
      font: {
        size: 18px;
      }
    }

    .description,
    .extended-description {
      td {
        background: hsla(0, 0%, 100%, 0.5);
        padding: 10px 20px;
        position: relative;
      }

      p {
        margin: 0 0 0.5em;
        &:last-child {
          margin-bottom: 0;
        }
      }
    }
    .description {
      td {
        position: relative;
        color: hsl(50, 20%, 20%);
        font: {
          size: 20px;
        }
      }
    }

    .extended-description {
      td {
        color: hsl(50, 20%, 20%);
        font: {
          size: 18px;
        }
        padding-top: 0;

        p:first-child {
          margin-top: 0;
        }
      }
    }
  }

  &.lightweight {
    background: hsl(50, 100%, 50%);

    thead {
      th {
        font: {
          size: 18px;
        }
        text-align: left;
      }
    }

    th {
      text-align: right;
      padding: 5px 10px;
    }
    td {
      padding: 5px 10px;
    }

    padding: 1em;
    position: relative;
    @extend .fancy-border;
  }

  &.fullwidth {
    width: 100%;
  }

  &.zebra {
    tr:nth-child(even) {
      td {
        background: {
          color: hsl(50, 100%, 95%);
        }
      }
    }
  }
}

.smalltext {
  font: {
    size: 18px;
  }
}

.hardwrap {
  /* These are technically the same, but use both */
  overflow-wrap: break-word;
  word-wrap: break-word;

  -ms-word-break: break-all;
  /* This is the dangerous one in WebKit, as it breaks things wherever */
  word-break: break-all;
  /* Instead use this non-standard one: */
  word-break: break-word;

  /* Adds a hyphen where the word breaks, if supported (No Blink) */
  -ms-hyphens: auto;
  -moz-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;
}

/* Use this class to pad flow elements (eg. div, form) -Jared 4/9/11 */
.flow-padding {
  padding: 8px 0px;
}

/* Symetrical two column layout */
.left-column,
.right-column {
  box-sizing: border-box;
  vertical-align: top;
  display: inline-block;

  @include breakpoint(xs) {
    width: 100%;
  }
  @include breakpoint(gt-xs) {
    width: calc(50% - 2.5vw);
    .left-column {
      padding-right: 5px;
    }
    .right-column {
      padding-left: 5px;
    }
  }
}

/* Horizontal row of buttons.  Pad the same as a paragraph,
except when following an h2, then pad half as much on top as
normal. -Jared 2012-06-10 */
.row-of-buttons {
  padding: 0.5em 0em;
  h2 + & {
    padding: 0.25em 0em 0.5em 0em;
  }
  form,
  div {
    display: inline;
  }
}

ul.radio {
  list-style-type: none;
  padding: 0;
  margin: 0;
}

.disabled {
  opacity: 0.3;
}

.created-updated-dates {
  color: #666;
  margin: 0 0 1em;
  font: {
    size: 18px;
  }

  .icon {
    display: inline-block;
    fill: #666;
    width: 15px;
    height: 15px;
    margin: 0 5px;
    position: relative;
    top: 3px;
  }
}

hr {
  border: 1px solid #333;
}

/* A horizontal line of stuff, each one floated left with
some padding between each -Jared 2012-05-30 */
.floating-padded-line-item {
  float: left;
  padding: 1em 2em 1em 0em;
}

.buffer-top {
  margin-top: 1em;
}

.buffer-bottom {
  margin-bottom: 1em;
}

.clear {
  clear: both;
}

.app-call-to-action {
  color: white;
  clear: both;
  font: {
    family: boswell;
  }
  float: right;
  margin: 0 0 1em 1em;
  @include breakpoint(lt-sm) {
    float: none;
    margin: 0 0 1em;
  }
  padding: 0;
  text-align: center;
  max-width: 400px;

  .download {
    margin: 0;
    font: {
      size: 24px;
    }
    @include breakpoint(lt-sm) {
      font: {
        size: 18px;
      }
    }
    text-transform: uppercase;
  }

  p {
    font: {
      size: 14px;
    }
    @include breakpoint(lt-sm) {
      font: {
        size: 12px;
      }
    }
    margin: 0;
    text-transform: uppercase;
  }

  a {
    background: {
      color: hsl(100, 60%, 50%);
    }
    color: white;
    display: block;
    padding: 1em;
    text-decoration: none;
    position: relative;
    transition: all 0.2s;

    @extend .fancy-border;

    &:hover {
      background: {
        color: hsl(100, 50%, 50%);
      }
    }
  }

  .side-by-side {
    display: flex;

    > {
      flex: 1 1 auto;
    }
  }

  .icon {
    fill: white;
  }

  .content-bullet {
    margin: 0.25em auto;
    height: 40px;

    @include breakpoint(lt-sm) {
      height: 30px;
    }
  }
}

.give-me-liberties {
  display: block;
  max-width: 400px;
  margin: 0 auto;
  width: 80%;
}

.list-separator {
  margin: 0 0 0.5em;

  span {
    font-size: 18px;
    display: inline-block;
    margin-right: 0.5em;
  }

  .glue {
    font-size: 18px;
    width: 1em;
    text-align: center;
  }
}

[data-email-list] {
  width: 100%;
}

/* GOStrap */
.d-flex {
  display: flex;
}

.text-left {
  text-align: left;
}
.text-right {
  text-align: right;
}

/* The beginnings of a grid system */
// Variables
$columns-total: 12;

.padded-grid {
  [class^="col-"] {
    padding: 10px;
  }
}

.row {
  display: flex;
  flex-wrap: wrap;
}

.col {
  flex-grow: 1;
}

[class^="col-"] {
  width: 100%;
  box-sizing: border-box;
}

/*
 * .col-${size}-${column}
 */
$breakpoints: map-keys($breakpoint-stops);

// For the smallest breakpoint, set any column widths to always be applicable
$breakpoint: nth($breakpoints, 1);
@for $i from 1 through $columns-total {
  .col-#{$breakpoint}-#{$i} {
    width: percentage(decimal-round($i / $columns-total, 2));
  }
}

// For all the rest, set column widths to be applicable when the browser width
// is that breakpoint's width or larger
@for $i from 2 through length($breakpoints) {
  $breakpoint: nth($breakpoints, $i);
  $previous-breakpoint: nth($breakpoints, $i - 1);

  @include breakpoint("gt-#{$previous-breakpoint}") {
    @for $j from 1 through $columns-total {
      .col-#{$breakpoint}-#{$j} {
        width: percentage(decimal-round($j / $columns-total, 2));
      }
    }
  }
}

/*
 * Flex properties
 *
 * .flex-{grow|shrink}-0
 * .flex-{grow|shrink}-1
 * .flex-sm-{grow|shrink}-0
 * .flex-sm-{grow|shrink}-1
 */
.flex-grow-0 {
  flex-grow: 0;
}
.flex-grow-1 {
  flex-grow: 1;
}
.flex-shrink-0 {
  flex-shrink: 0;
}
.flex-shrink-1 {
  flex-shrink: 1;
}

$breakpoints: map-keys($breakpoint-stops);

$breakpoint: nth($breakpoints, 1);
@include breakpoint("#{$breakpoint}") {
  .flex-#{$breakpoint}-grow-0 {
    flex-grow: 0;
  }
  .flex-#{$breakpoint}-grow-1 {
    flex-grow: 0;
  }
  .flex-#{$breakpoint}-shrink-0 {
    flex-shrink: 0;
  }
  .flex-#{$breakpoint}-shrink-1 {
    flex-shrink: 1;
  }
}

@for $i from 2 through length($breakpoints) {
  $breakpoint: nth($breakpoints, $i);
  $previous-breakpoint: nth($breakpoints, $i - 1);
  @include breakpoint("gt-#{$previous-breakpoint}") {
    .flex-#{$breakpoint}-grow-0 {
      flex-grow: 0;
    }
    .flex-#{$breakpoint}-grow-1 {
      flex-grow: 0;
    }
    .flex-#{$breakpoint}-shrink-0 {
      flex-shrink: 0;
    }
    .flex-#{$breakpoint}-shrink-1 {
      flex-shrink: 1;
    }
  }
}

/*
 * .text-${size}-${left|right}
 */
$breakpoints: map-keys($breakpoint-stops);
@for $i from 1 through length($breakpoints) {
  $breakpoint: nth($breakpoints, $i);
  @include breakpoint("#{$breakpoint}") {
    @for $i from 1 through $columns-total {
      .text-#{$breakpoint}-left {
        text-align: left;
      }

      .text-#{$breakpoint}-right {
        text-align: right;
      }
    }
  }
}

.player-list {
  border-collapse: collapse;
  width: 100%;

  th,
  td {
    padding: 10px;
  }

  $thead-background: hsl(50, 70%, 50%);
  $tbody-background: lighten($thead-background, 20%);

  thead {
    background: {
      color: $thead-background;
    }

    th {
      color: darken($thead-background, 20%);
      text-align: left;
    }
  }

  tbody {
    font: {
      size: 18px;
    }

    tr {
      &:nth-child(odd) {
        background: {
          color: $tbody-background;
        }
      }
      &:nth-child(even) {
        background: {
          color: lighten($tbody-background, 10%);
        }
      }
    }
  }
}

.align-center {
  text-align: right;
}

.align-right {
  text-align: right !important;
}

table.mini-calendar {
  border-collapse: collapse;

  td {
    transition: all 0.2s;
    &.input {
      cursor: pointer;
      text-align: center;

      &:hover {
        background: hsla(100, 50%, 70%, 0.5);
      }
    }
    &.checked {
      background: hsl(100, 50%, 70%) !important;
    }
    font: {
      size: 14px;
    }
    padding: 0;
  }

  button {
    font: {
      size: 14px;
    }
    margin-top: 5px;
    padding: 3px;
  }
}

list-filter {
  display: flex;
  margin-bottom: 1em;

  input {
    padding: 5px;
    font: {
      size: 18px;
    }
    margin-right: 1em;
  }
  button {
  }
}

.hidden-by-filter {
  display: none;
}

.responsive-table {
  $thead-background: hsl(0, 0%, 20%);
  $tbody-background: lighten($thead-background, 70%);

  * {
    box-sizing: border-box;
  }

  .thead {
    background: $thead-background;
    color: hsl(0, 0%, 80%);
    font: {
      size: 18px;
    }
  }

  .th,
  .td {
    align-items: center;
    display: flex;
    padding: 0.5em;
  }

  .tbody {
    background: $tbody-background;

    .row {
      transition: all 0.2s;
    }

    .row:hover {
      background: lighten($tbody-background, 5%);
    }
  }
}

.check-in-list {
  .user {
    overflow: hidden;
    text-overflow: ellipsis;
  }

  @include breakpoint(xxs) {
    input[type="submit"] {
      font: {
        size: 12px;
      }
      padding: 0.4em 0.4em;
    }

    .name {
      font: {
        size: 14px;
      }
    }

    .user {
      font: {
        size: 12px;
      }
    }
  }

  @include breakpoint(lt-md) {
    .check-in-button {
      display: none;
    }
  }

  @include breakpoint(gt-sm) {
    .mini-check-in-button {
      display: none;
    }
  }

  .row.cleared {
    input[type="submit"] {
      background: hsl(100, 60%, 45%);
      &:hover {
        background: hsl(100, 70%, 50%);
      }
    }
  }

  .row.not-cleared {
    input[type="submit"] {
      background: hsl(0, 0%, 50%);
    }
  }
}

input[type="radio"] {
  margin-top: -1px;
  vertical-align: middle;
}

.statement-of-welcome {
  @extend .fancy-border;
  background: hsl(40, 80%, 50%);
  color: white;
  font: {
    size: 18px;
  }
  padding: 1em;
  position: relative;

  h3 {
    font: {
      size: 24px;
    }
    margin: 0 0 0.5em;
    text-transform: uppercase;
  }

  p {
    margin: 0;
  }
}

a.extended-description {
  text-decoration: none;
}

/* Make an elegant, labeled list, good for mobile views */
table.labeled-list {
  $color-th: hsl(0, 0%, 20%);
  $color-td: hsl(0, 0%, 70%);

  border-collapse: collapse;

  th, td {
    line-height: 1;
    padding: 5px;
  }

  th {
    color: $color-th;
    font: {
      family: boswell;
      weight: normal;
    }
    text-align: right;
  }

  td {
    color: $color-td;
    font: {
      size: 48px;
    }
    text-align: left;
  }

  .de-emphasize {
    td {
      color: lighten($color-td, 20%);
    }
  }

  .total {
    th, td {
      border-top: 5px solid hsl(0, 0%, 20%);
    }
  }
}

.daily-schedule {
  background: white;

  table {
    background: white;
    border-collapse: collapse;
    width: 100%;
  }

  &.full-screen {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    overflow-y: scroll;
    z-index: 100000;

    background-image: linear-gradient(to top, #30cfd0 0%, #330867 100%);
  }

  thead {
    th {
      background-color: hsl(50, 70%, 50%);
      color: white;
    }
  }

  th {
    text-align: left;
  }

  th:nth-child(1), td:nth-child(1) {
    white-space: nowrap;
  }

  th, td {
    line-height: 1.2;
    padding: 0.35em 0.4em 0.25em;
    vertical-align: top;
  }

  .time, .location, .track, .title, .description {
    font-family: 'boswell';
    color: hsla(0, 0%, 0%, 0.7);
  }

  .location {
    width: 15%;
  }

  .track {
    font-family: 'boswell';
    white-space: nowrap;
  }

  .title {
    font-family: 'boswell';
  }

  .description {
    font-size: 18px;
    width: 25%;
  }

  $tracks: (
    tournaments: #2c67b8,
    kyu-lectures: #3e853c,
    dan-lectures: #d7bc4f,
    general-lectures: #ce7034,
    game-reviews: #583776,
    simuls: #ab446e,
    special-events: #b73522,
    youth-room: #73808f,
    teachers-workshop: #000000,
    tournament-directors-workshop: #285081,
    meetings: #2b5b25,
    ejournal: #bc983f,
    broadcast: #b05f2b,
    meals: #7a1d12
  );

  @each $track, $color in $tracks {
    .#{$track} {
      background-color: transparentize($color, 0.7);

      td:first-child {
        // border-right: 10px solid $color;
      }
      .track {
        background-color: $color;
        color: hsla(0, 0%, 100%, 0.8);
      }
    }
  }


  .happening-now {
    td:first-child {
      border-left: 20px solid hsl(100, 50%, 50%);
    }
  }

  .in-the-past {
    display: none;
  }

  .meter {
    &:before {
      background: hsl(0, 0%, 50%);
      content: '';
      position: fixed;
      right: 0;
      bottom: 0;
      width: 10px;
      // height: 100%;
      animation: {
        name: elapse;
        duration: 20s;
        iteration-count: 1;
        timing-function: linear;
      }
    }

    background: white;
    position: fixed;
    right: 0;
    top: 0;
    bottom: 0;
    width: 10px;
    box-sizing: border-box;
  }

  @keyframes elapse {
    0% {
      height: 100%;
    }
    100% {
      height: 0;
    }
  }

  .clock {
    color: hsla(0, 0%, 0%, 0.5);
    font: {
      family: 'boswell';
      size: 60px;
    }
    position: fixed;
    bottom: 0;
    right: 0;
    padding: 0.5em 1em;
  }
}
